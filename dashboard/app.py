import streamlit as st
import os
import sys
import re
sys.path.append(os.path.abspath(os.path.join(os.path.dirname(__file__), '..')))
from services.woocommerce_service import fetch_products
from services.woocommerce_service import fetch_product_sales
import scraping.shopee_api as shopee_api
import plotly.express as px
products = fetch_products()
shopee_api.get_reviews()
# ---- Imports ----
from scraping import (
    cps_oem_scraper,
    facebook_scraper,
    fujikaservice_scraper,
    fujikathailand_scraper,
    lazada_api,
    line_oa_scraper,
    shopee_api  
)

st.title("üìä Dashboard's ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏à‡∏≤‡∏Å‡∏´‡∏•‡∏≤‡∏¢‡πÅ‡∏û‡∏•‡∏ï‡∏ü‡∏≠‡∏£‡πå‡∏°")
# ---- Page config ----
st.set_page_config(page_title="Fujika Multi-Platform Dashboard", layout="wide")

# ---- Top menu to switch view ----
view = st.selectbox("üîΩ ‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏´‡∏ô‡πâ‡∏≤‡πÅ‡∏™‡∏î‡∏á‡∏ú‡∏•", ["by Watsana", "1 vs 2"])

# ---- Show normal dashboard ----
if view == "by Watsana":

    tabs = st.tabs([
        "üì∞ Fujikathailand.com",
        "üè≠ CPSManu.com",
        "üõ†Ô∏è FujikaService.com",
        "üõçÔ∏è Shopee",
        "üì¶ Lazada",
        "üìò Facebook Page/Ads",
        "üí¨ LINE Official Account"
    ])

    # ‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤‡∏Ñ‡πà‡∏≤‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏ï‡πâ‡∏ô ‡∏ñ‡πâ‡∏≤‡∏¢‡∏±‡∏á‡πÑ‡∏°‡πà‡πÄ‡∏Ñ‡∏¢‡∏Ñ‡∏•‡∏¥‡∏Å
    if "show_posts" not in st.session_state:
        st.session_state.show_posts = False
    if "show_products" not in st.session_state:
        st.session_state.show_products = False

    #--------------------- 1. Fujikathailand ---------------------
    with tabs[0]:
        st.header("üìÑ WordPress Posts: Fujikathailand.com")

        # üîò ‡∏õ‡∏∏‡πà‡∏°‡∏™‡∏•‡∏±‡∏ö‡∏Å‡∏≤‡∏£‡πÅ‡∏™‡∏î‡∏á‡∏ö‡∏ó‡∏Ñ‡∏ß‡∏≤‡∏°
        col_post_btn1, col_post_btn2 = st.columns([1, 9])
        with col_post_btn1:
            post_btn_label = "üìñ ‡∏î‡∏π‡∏ö‡∏ó‡∏Ñ‡∏ß‡∏≤‡∏°" if not st.session_state.show_posts else "üîΩ ‡∏¢‡πà‡∏≠‡∏Å‡∏•‡∏±‡∏ö‡∏ö‡∏ó‡∏Ñ‡∏ß‡∏≤‡∏°"
            if st.button(post_btn_label, key="toggle_posts_button"):
                st.session_state.show_posts = not st.session_state.show_posts

        # üîò ‡∏õ‡∏∏‡πà‡∏°‡∏™‡∏•‡∏±‡∏ö‡∏Å‡∏≤‡∏£‡πÅ‡∏™‡∏î‡∏á‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤
        col_prod_btn1, col_prod_btn2 = st.columns([1, 9])
        with col_prod_btn1:
            prod_btn_label = "üõí ‡∏î‡∏π‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤" if not st.session_state.show_products else "üîΩ ‡∏¢‡πà‡∏≠‡∏Å‡∏•‡∏±‡∏ö‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤"
            if st.button(prod_btn_label, key="toggle_products_button"):
                st.session_state.show_products = not st.session_state.show_products

        # üìÑ ‡πÅ‡∏™‡∏î‡∏á‡∏ö‡∏ó‡∏Ñ‡∏ß‡∏≤‡∏°
        if st.session_state.show_posts:
            posts_with_comments = fujikathailand_scraper.fetch_posts_with_comments()
            st.markdown("---")
            for post in posts_with_comments:
                col1, col2 = st.columns([2, 1])
                with col1:
                    st.subheader(post.get("title", {}).get("rendered", "‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏´‡∏±‡∏ß‡∏Ç‡πâ‡∏≠"))
                    excerpt_raw = post.get("excerpt", {}).get("rendered", "")
                    excerpt_clean = re.sub(
                        r'<a[^>]*>(Read More|‡∏≠‡πà‡∏≤‡∏ô‡πÄ‡∏û‡∏¥‡πà‡∏°‡πÄ‡∏ï‡∏¥‡∏°|Continue reading)[^<]*</a>',
                        '',
                        excerpt_raw,
                        flags=re.IGNORECASE
                    )
                    excerpt_clean = re.sub(r'(Read More\s*¬ª?|‡∏≠‡πà‡∏≤‡∏ô‡πÄ‡∏û‡∏¥‡πà‡∏°‡πÄ‡∏ï‡∏¥‡∏°)', '', excerpt_clean, flags=re.IGNORECASE)
                    st.write(excerpt_clean, unsafe_allow_html=True)
                    st.markdown(f"[‡∏≠‡πà‡∏≤‡∏ô‡πÄ‡∏û‡∏¥‡πà‡∏°‡πÄ‡∏ï‡∏¥‡∏°]({post.get('link')})", unsafe_allow_html=True)

                with col2:
                    comments = post.get("comments", [])
                    if comments:
                        st.markdown("### üí¨ ‡∏Ñ‡∏ß‡∏≤‡∏°‡∏Ñ‡∏¥‡∏î‡πÄ‡∏´‡πá‡∏ô")
                        for c in comments:
                            st.markdown(
                                f"- **{c.get('author_name', '‡πÑ‡∏°‡πà‡∏£‡∏∞‡∏ö‡∏∏‡∏ä‡∏∑‡πà‡∏≠')}**: {c.get('content', {}).get('rendered', '')}",
                                unsafe_allow_html=True
                            )
                    else:
                        st.markdown("_‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏Ñ‡∏≠‡∏°‡πÄ‡∏°‡∏ô‡∏ï‡πå_")

                st.markdown("---")

            # üîΩ ‡∏õ‡∏∏‡πà‡∏°‡∏¢‡πà‡∏≠‡∏Å‡∏•‡∏±‡∏ö‡∏ö‡∏ó‡∏Ñ‡∏ß‡∏≤‡∏° (‡∏•‡πà‡∏≤‡∏á‡∏™‡∏∏‡∏î)
            col1, col2 = st.columns([9, 1])
            with col2:
                if st.button("üîΩ ‡∏¢‡πà‡∏≠‡∏Å‡∏•‡∏±‡∏ö‡∏ö‡∏ó‡∏Ñ‡∏ß‡∏≤‡∏°", key="collapse_posts_bottom"):
                    st.session_state.show_posts = False


            # üõí ‡πÅ‡∏™‡∏î‡∏á‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤
            if st.session_state.show_products:
                st.subheader("üõí ‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤‡πÉ‡∏ô‡∏£‡πâ‡∏≤‡∏ô (WooCommerce)")
                for p in products:
                    st.write(f"‡∏ä‡∏∑‡πà‡∏≠‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤: {p['name']}, ‡∏£‡∏≤‡∏Ñ‡∏≤: {p['price']}")

                # üîΩ ‡∏õ‡∏∏‡πà‡∏°‡∏¢‡πà‡∏≠‡∏Å‡∏•‡∏±‡∏ö‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤
                col1, col2 = st.columns([9, 1])
                with col2:
                    if st.button("üîΩ ‡∏¢‡πà‡∏≠‡∏Å‡∏•‡∏±‡∏ö‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤", key="collapse_products_bottom"):
                        st.session_state.show_products = False

        # üìà ‡∏ß‡∏¥‡πÄ‡∏Ñ‡∏£‡∏≤‡∏∞‡∏´‡πå‡∏¢‡∏≠‡∏î‡∏Ç‡∏≤‡∏¢‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤
        

    with st.expander("üìà ‡∏ß‡∏¥‡πÄ‡∏Ñ‡∏£‡∏≤‡∏∞‡∏´‡πå‡∏¢‡∏≠‡∏î‡∏Ç‡∏≤‡∏¢‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤ (WooCommerce Orders)"):
        if st.button("üìä ‡πÅ‡∏™‡∏î‡∏á‡∏Å‡∏£‡∏≤‡∏ü‡∏¢‡∏≠‡∏î‡∏Ç‡∏≤‡∏¢‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤", key="show_sales_chart_btn"):
            sales_data = fetch_product_sales()
            if sales_data:
                # ‡πÄ‡∏ï‡∏£‡∏µ‡∏¢‡∏°‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏Å‡∏£‡∏≤‡∏ü
                product_names = list(sales_data.keys())
                quantities = [info["quantity"] for info in sales_data.values()]
                revenues = [round(info["revenue"], 2) for info in sales_data.values()]

                # üî∏ ‡πÅ‡∏™‡∏î‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÅ‡∏ö‡∏ö‡∏ï‡∏≤‡∏£‡∏≤‡∏á
                sales_list = [
                    {
                        "‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤": name,
                        "‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡∏ó‡∏µ‡πà‡∏Ç‡∏≤‡∏¢‡πÑ‡∏î‡πâ": qty,
                        "‡∏£‡∏≤‡∏¢‡πÑ‡∏î‡πâ‡∏£‡∏ß‡∏° (‡∏ö‡∏≤‡∏ó)": rev
                    }
                    for name, qty, rev in zip(product_names, quantities, revenues)
                ]
                st.dataframe(sales_list)

                # üîπ ‡∏Å‡∏£‡∏≤‡∏ü Interactive ‡∏î‡πâ‡∏ß‡∏¢ Plotly

                # ‡∏Å‡∏£‡∏≤‡∏ü‡∏ó‡∏µ‡πà 1: ‡∏£‡∏≤‡∏¢‡πÑ‡∏î‡πâ‡∏£‡∏ß‡∏° (‡∏ö‡∏≤‡∏ó)
                fig_revenue = px.bar(
                    x=product_names,
                    y=revenues,
                    labels={"x": "‡∏ä‡∏∑‡πà‡∏≠‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤", "y": "‡∏£‡∏≤‡∏¢‡πÑ‡∏î‡πâ‡∏£‡∏ß‡∏° (‡∏ö‡∏≤‡∏ó)"},
                    title="üí∞ ‡∏£‡∏≤‡∏¢‡πÑ‡∏î‡πâ‡∏£‡∏ß‡∏°‡∏ï‡πà‡∏≠‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤ (‡∏ö‡∏≤‡∏ó)"
                )
                fig_revenue.update_layout(xaxis_tickangle=-45)
                st.plotly_chart(fig_revenue, use_container_width=True)

                # ‡∏Å‡∏£‡∏≤‡∏ü‡∏ó‡∏µ‡πà 2: ‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤‡∏ó‡∏µ‡πà‡∏Ç‡∏≤‡∏¢‡πÑ‡∏î‡πâ
                fig_quantity = px.bar(
                    x=product_names,
                    y=quantities,
                    labels={"x": "‡∏ä‡∏∑‡πà‡∏≠‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤", "y": "‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡∏ó‡∏µ‡πà‡∏Ç‡∏≤‡∏¢‡πÑ‡∏î‡πâ"},
                    title="üì¶ ‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤‡∏ó‡∏µ‡πà‡∏Ç‡∏≤‡∏¢‡πÑ‡∏î‡πâ‡∏ï‡πà‡∏≠‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£"
                )
                fig_quantity.update_layout(xaxis_tickangle=-45)
                st.plotly_chart(fig_quantity, use_container_width=True)

            else:
                st.warning("‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏¢‡∏≠‡∏î‡∏Ç‡∏≤‡∏¢‡∏ó‡∏µ‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡πÅ‡∏™‡∏î‡∏á‡πÑ‡∏î‡πâ")


    # --------------------- 1. Lazada ---------------------    

    # --------------------- 2. CPSManu ---------------------
    with tabs[1]:
        st.header("üè≠ WordPress Posts: cpsmanu.com")
        posts = cps_oem_scraper.fetch_posts()
        for post in posts:
            st.subheader(post['title'])
            st.write(post['date'])
            st.write(post['link'])
            st.divider()

    # --------------------- 3. FujikaService ---------------------
    with tabs[2]:
        st.header("üõ†Ô∏è ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ö‡∏£‡∏¥‡∏Å‡∏≤‡∏£‡∏´‡∏•‡∏±‡∏á‡∏Å‡∏≤‡∏£‡∏Ç‡∏≤‡∏¢: Fujikaservice.com")
        data = fujikaservice_scraper.fetch_service_data()
        st.dataframe(data)

    # --------------------- 4. Shopee ---------------------
    with tabs[3]:
        st.header("üõçÔ∏è ‡∏£‡∏µ‡∏ß‡∏¥‡∏ß Shopee")
        reviews = shopee_api.get_reviews()
        st.dataframe(reviews)

    # --------------------- 5. Lazada ---------------------
    with tabs[4]:
        st.header("üì¶ Lazada Orders")
        if lazada_api.is_token_valid():
            orders = lazada_api.get_orders()
            st.dataframe(orders)
        else:
            st.warning("‚ö†Ô∏è Token ‡∏´‡∏°‡∏î‡∏≠‡∏≤‡∏¢‡∏∏ ‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡πÄ‡∏Ç‡πâ‡∏≤‡∏™‡∏π‡πà‡∏£‡∏∞‡∏ö‡∏ö‡πÉ‡∏´‡∏°‡πà")
            st.markdown(f"[‡∏Ñ‡∏•‡∏¥‡∏Å‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏£‡∏±‡∏ö Token ‡πÉ‡∏´‡∏°‡πà]({lazada_api.get_auth_url()})")

    # --------------------- 6. Facebook Page / Ads ---------------------
    with tabs[5]:
        st.header("üìò Facebook Page / Ads")
        page_insight = facebook_scraper.get_page_insights()
        ad_data = facebook_scraper.get_ads_data()
        st.subheader("üìà Page Insights")
        st.json(page_insight)
        st.subheader("üí∞ Ads Data")
        st.dataframe(ad_data)

    # --------------------- 7. LINE OA ---------------------
    with tabs[6]:
        st.header("üí¨ LINE OA Insights")
        insights = line_oa_scraper.get_line_oa_insight()
        st.json(insights)

# ---- Show alternate page ----
elif view == "1 vs 2":
    st.title("üéâ May I be happy.")
    st.markdown("ü•≥ ‡∏Ç‡∏≠‡πÉ‡∏´‡πâ‡∏õ‡∏µ‡∏ô‡∏µ‡πâ‡πÄ‡∏ï‡πá‡∏°‡πÑ‡∏õ‡∏î‡πâ‡∏ß‡∏¢‡∏Ñ‡∏ß‡∏≤‡∏°‡∏™‡∏∏‡∏Ç ‡∏Ñ‡∏ß‡∏≤‡∏°‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à ‡πÅ‡∏•‡∏∞‡∏™‡∏¥‡πà‡∏á‡∏î‡∏µ‡πÜ!")
